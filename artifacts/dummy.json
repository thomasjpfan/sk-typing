{
  "DummyClassifier": {
    "name": "sklearn.dummy.DummyClassifier",
    "common_name": "DummyClassifier",
    "description": "DummyClassifier is a classifier that makes predictions using simple rules. This classifier is useful as a simple baseline to compare with other (real) classifiers. Do not use it for real problems.  Read more in the :ref:`User Guide <dummy_estimators>`.  .. versionadded:: 0.13",
    "sklearn_version": "0.24.0",
    "Hyperparams": [
      {
        "type": "Enumeration",
        "name": "strategy",
        "init_args": {
          "semantic_types": [
            "strategy"
          ],
          "values": [
            "stratified",
            "most_frequent",
            "prior",
            "uniform",
            "constant"
          ],
          "_structural_type": "str",
          "default": "prior",
          "description": "Strategy to use to generate predictions.  * \"stratified\": generates predictions by respecting the training   set's class distribution. * \"most_frequent\": always predicts the most frequent label in the   training set. * \"prior\": always predicts the class that maximizes the class prior   (like \"most_frequent\") and ``predict_proba`` returns the class prior. * \"uniform\": generates predictions uniformly at random. * \"constant\": always predicts a constant label that is provided by   the user. This is useful for metrics that evaluate a non-majority   class    .. versionchanged:: 0.24      The default value of `strategy` has changed to \"prior\" in version      0.24."
        }
      },
      {
        "name": "random_state",
        "type": "Union",
        "init_args": {
          "semantic_types": [
            "random_state"
          ],
          "default": "random_state__None",
          "description": "Controls the randomness to generate the predictions when ``strategy='stratified'`` or ``strategy='uniform'``. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
        },
        "hyperparams": [
          {
            "type": "Hyperparameter",
            "name": "random_state__int",
            "init_args": {
              "semantic_types": [
                "random_state"
              ],
              "_structural_type": "int"
            }
          },
          {
            "type": "Constant",
            "name": "random_state__None",
            "init_args": {
              "semantic_types": [
                "random_state"
              ],
              "_structural_type": "None",
              "default": "None"
            }
          }
        ]
      },
      {
        "name": "constant",
        "type": "Union",
        "init_args": {
          "semantic_types": [
            "constant"
          ],
          "default": "constant__None",
          "description": "The explicit constant as predicted by the \"constant\" strategy. This parameter is useful only for the \"constant\" strategy."
        },
        "hyperparams": [
          {
            "type": "Hyperparameter",
            "name": "constant__int",
            "init_args": {
              "semantic_types": [
                "constant"
              ],
              "_structural_type": "int"
            }
          },
          {
            "type": "Hyperparameter",
            "name": "constant__str",
            "init_args": {
              "semantic_types": [
                "constant"
              ],
              "_structural_type": "str"
            }
          },
          {
            "name": "constant__ndarray",
            "type": "Hyperparameter",
            "init_args": {
              "_structural_type": "ndarray",
              "semantic_types": [
                "constant"
              ]
            }
          },
          {
            "type": "Constant",
            "name": "constant__None",
            "init_args": {
              "semantic_types": [
                "constant"
              ],
              "_structural_type": "None",
              "default": "None"
            }
          }
        ]
      }
    ],
    "Params": []
  },
  "DummyRegressor": {
    "name": "sklearn.dummy.DummyRegressor",
    "common_name": "DummyRegressor",
    "description": "DummyRegressor is a regressor that makes predictions using simple rules. This regressor is useful as a simple baseline to compare with other (real) regressors. Do not use it for real problems.  Read more in the :ref:`User Guide <dummy_estimators>`.  .. versionadded:: 0.13",
    "sklearn_version": "0.24.0",
    "Hyperparams": [
      {
        "type": "Enumeration",
        "name": "strategy",
        "init_args": {
          "semantic_types": [
            "strategy"
          ],
          "values": [
            "mean",
            "median",
            "quantile",
            "constant"
          ],
          "_structural_type": "str",
          "default": "mean",
          "description": "Strategy to use to generate predictions.  * \"mean\": always predicts the mean of the training set * \"median\": always predicts the median of the training set * \"quantile\": always predicts a specified quantile of the training set,   provided with the quantile parameter. * \"constant\": always predicts a constant value that is provided by   the user."
        }
      },
      {
        "name": "constant",
        "type": "Union",
        "init_args": {
          "semantic_types": [
            "constant"
          ],
          "default": "constant__None",
          "description": "The explicit constant as predicted by the \"constant\" strategy. This parameter is useful only for the \"constant\" strategy."
        },
        "hyperparams": [
          {
            "type": "Hyperparameter",
            "name": "constant__int",
            "init_args": {
              "semantic_types": [
                "constant"
              ],
              "_structural_type": "int"
            }
          },
          {
            "type": "Hyperparameter",
            "name": "constant__float",
            "init_args": {
              "semantic_types": [
                "constant"
              ],
              "_structural_type": "float"
            }
          },
          {
            "name": "constant__ndarray",
            "type": "Hyperparameter",
            "init_args": {
              "_structural_type": "ndarray",
              "semantic_types": [
                "constant"
              ]
            }
          },
          {
            "type": "Constant",
            "name": "constant__None",
            "init_args": {
              "semantic_types": [
                "constant"
              ],
              "_structural_type": "None",
              "default": "None"
            }
          }
        ]
      },
      {
        "name": "quantile",
        "type": "Union",
        "init_args": {
          "semantic_types": [
            "quantile"
          ],
          "default": "quantile__None",
          "description": "The quantile to predict using the \"quantile\" strategy. A quantile of 0.5 corresponds to the median, while 0.0 to the minimum and 1.0 to the maximum."
        },
        "hyperparams": [
          {
            "type": "Hyperparameter",
            "name": "quantile__float",
            "init_args": {
              "semantic_types": [
                "quantile"
              ],
              "_structural_type": "float"
            }
          },
          {
            "type": "Constant",
            "name": "quantile__None",
            "init_args": {
              "semantic_types": [
                "quantile"
              ],
              "_structural_type": "None",
              "default": "None"
            }
          }
        ]
      }
    ],
    "Params": []
  }
}