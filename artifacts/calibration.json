{
  "CalibratedClassifierCV": {
    "name": "sklearn.calibration.CalibratedClassifierCV",
    "common_name": "CalibratedClassifierCV",
    "description": "Probability calibration with isotonic regression or sigmoid. See glossary entry for :term:`cross-validation estimator`.  With this class, the base_estimator is fit on the train set of the cross-validation generator and the test set is used for calibration. The probabilities for each of the folds are then averaged for prediction. In case that cv=\"prefit\" is passed to __init__, it is assumed that base_estimator has been fitted already and all data is used for calibration. Note that data for fitting the classifier and for calibrating it must be disjoint.  Read more in the :ref:`User Guide <calibration>`.",
    "sklearn_version": "0.22.2.post1",
    "Hyperparams": [
      {
        "name": "base_estimator",
        "type": "Hyperparameter",
        "init_args": {
          "_structural_type": "Estimator",
          "semantic_types": [
            "base_estimator"
          ],
          "default": "None",
          "description": "The classifier whose output decision function needs to be calibrated to offer more accurate predict_proba outputs. If cv=prefit, the classifier must have been fit already on data."
        }
      },
      {
        "type": "Enumeration",
        "name": "method",
        "init_args": {
          "semantic_types": [
            "method"
          ],
          "values": [
            "sigmoid",
            "isotonic"
          ],
          "_structural_type": "str",
          "default": "sigmoid",
          "description": "The method to use for calibration. Can be 'sigmoid' which corresponds to Platt's method or 'isotonic' which is a non-parametric approach. It is not advised to use isotonic calibration with too few calibration samples ``(<<1000)`` since it tends to overfit. Use sigmoids (Platt's calibration) in this case."
        }
      },
      {
        "name": "cv",
        "type": "Union",
        "init_args": {
          "semantic_types": [
            "cv"
          ],
          "default": "cv__None",
          "description": "Determines the cross-validation splitting strategy. Possible inputs for cv are:  - None, to use the default 5-fold cross-validation, - integer, to specify the number of folds. - :term:`CV splitter`, - An iterable yielding (train, test) splits as arrays of indices.  For integer/None inputs, if ``y`` is binary or multiclass, :class:`sklearn.model_selection.StratifiedKFold` is used. If ``y`` is neither binary nor multiclass, :class:`sklearn.model_selection.KFold` is used.  Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here.  If \"prefit\" is passed, it is assumed that base_estimator has been fitted already and all data is used for calibration.  .. versionchanged:: 0.22     ``cv`` default value if None changed from 3-fold to 5-fold."
        },
        "hyperparams": [
          {
            "type": "Hyperparameter",
            "name": "cv__int",
            "init_args": {
              "semantic_types": [
                "cv"
              ],
              "_structural_type": "int"
            }
          },
          {
            "type": "Constant",
            "name": "cv__None",
            "init_args": {
              "semantic_types": [
                "cv"
              ],
              "_structural_type": "None",
              "default": "None"
            }
          },
          {
            "type": "Constant",
            "name": "cv__str",
            "init_args": {
              "semantic_types": [
                "cv"
              ],
              "_structural_type": "str"
            }
          }
        ]
      }
    ],
    "Params": [
      {
        "name": "classes_",
        "description": "The class labels.",
        "type": "ndarray"
      },
      {
        "name": "calibrated_classifiers_",
        "description": "The list of calibrated classifiers, one for each crossvalidation fold, which has been fitted on all but the validation fold and calibrated on the validation fold.",
        "type": "list"
      }
    ]
  }
}